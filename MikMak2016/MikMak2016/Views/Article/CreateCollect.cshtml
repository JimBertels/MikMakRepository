@model MikMak2016.App_Data.DAL.Article

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Article</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Id, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { @Value = ViewBag.Id, @readonly = true })
                @*@Html.ValidationMessageFor(model => model.Id)*@
            </div>
            <script type="text/javascript">
                var element = document.getElementById("Id");
                element.setAttribute("value", "@ViewBag.Id");
                element.setAttribute("readonly");
            </script>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number)
                @Html.ValidationMessageFor(model => model.Number)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StandardCost, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StandardCost)
                @Html.ValidationMessageFor(model => model.StandardCost)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Breadth, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Breadth)
                @Html.ValidationMessageFor(model => model.Breadth)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrossWeight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GrossWeight)
                @Html.ValidationMessageFor(model => model.GrossWeight)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.IdArticleType, "IdArticleType", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdArticleType", "..select articletype..")
                @Html.ValidationMessageFor(model => model.IdArticleType)
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.IdArticleType, "ArticleType", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdArticleType", ViewBag.IdArticleType as SelectList, "..Select an articletype..", new { @onchange = "getCollect(this)" })
                @Html.ValidationMessageFor(model => model.IdArticleType)
                <script type="text/javascript">
                    function getCollect(element)
                    {
                        var selectedValue = element.value;

                        if ( selectedValue == 8)
                        {
                            var btn = document.getElementById("collect");
                            btn.setAttribute("type", "button");
                            btn.setAttribute("value", "Collect Products");
                            btn.setAttribute("disabled", "true");
                            btn.setAttribute("onclick", "window.location(href='@Url.Action("CollectArt", "Article", new { id = @ViewBag.Id })')");                         
                        }
                    } 
                </script> 
               
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RestockingTerm, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RestockingTerm)
                @Html.ValidationMessageFor(model => model.RestockingTerm)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdUnitBase, "IdUnitBase", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdUnitBase", "..select unitbase..")
                @Html.ValidationMessageFor(model => model.IdUnitBase)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice)
                @Html.ValidationMessageFor(model => model.UnitPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdSupplier, "IdSupplier", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdSupplier", "..select supplier..")
                @Html.ValidationMessageFor(model => model.IdSupplier)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image)
                @*@Html.TextBoxFor(model => model.Image, new { type = "file" })*@
                @Html.ValidationMessageFor(model => model.Image)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsertedBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InsertedBy)
                @Html.ValidationMessageFor(model => model.InsertedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsertedOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InsertedOn)
                @Html.ValidationMessageFor(model => model.InsertedOn)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedBy)
                @Html.ValidationMessageFor(model => model.UpdatedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedOn)
                @Html.ValidationMessageFor(model => model.UpdatedOn)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="enableCollect()"/>
                <script type="text/javascript">
                function enableCollect()
                {
                    var btn = document.getElementById("collect");
                    btn.setAttribute("disabled", "false");
                }
                </script>
            </div>
        </div>


    </div>
}

@using (Html.BeginForm("Edit", "ProductArticle", new { id = ViewBag.Id }))
{
    <input id="collect" type="hidden" name="collect" disabled />
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
