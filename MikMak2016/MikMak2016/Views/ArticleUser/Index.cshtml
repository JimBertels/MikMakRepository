@using PagedList;
@using PagedList.Mvc;

@*model moet ipagedlist ipv ienumerable zijn want dat is wat er wordt teruggegeven*@
@model IPagedList<MikMak2016.App_Data.DAL.Article>

@{
    ViewBag.Title = "Index";
}

<h2>Liste d'articles</h2>

<button>@Html.ActionLink("Page d'accueil", "IndexUser", "Home")</button>
<button>@Html.ActionLink("Liste des articles en PDF", "GeneratePDF", "PDF", new { path = "Article" }, null)</button>

<p>
    @using (Html.BeginForm("Index", "ArticleUser", FormMethod.Get))
    {
        <b>Search by:</b> @Html.RadioButton("searchBy", "Number", true) <text> Number</text>
        @Html.RadioButton("searchBy", "Name") <text>Name</text><br />
        @Html.TextBox("search") <input type="submit" value="search" />
    }
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Number)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Name)
        </th>
        <th>Action</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <button class="btn-primary">@Html.ActionLink("Details", "Details", new { id = item.Id }) </button>
            </td>
        </tr>
    }

</table>
<div class="text-danger">
    @ViewBag.systeem
</div>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded }
)
@*Request.Qurystring zorgt ervoor dat de search(by) query in url behouden blijft als je ander pagina selecteerd*@